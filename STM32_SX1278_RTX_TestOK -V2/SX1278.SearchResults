---- SX1276LR Matches (212 in 4 files) ----
sx1276-LoRa.c (User\SX1278\radio):tSX1276LR* SX1276LR;
sx1276-LoRa.c (User\SX1278\radio):    SX1276LR->RegLna = RFLR_LNA_GAIN_G1;
sx1276-LoRa.c (User\SX1278\radio):    SX1276Read( REG_LR_VERSION, &SX1276LR->RegVersion );
sx1276-LoRa.c (User\SX1278\radio):    opModePrev = SX1276LR->RegOpMode & ~RFLR_OPMODE_MASK;
sx1276-LoRa.c (User\SX1278\radio):        SX1276LR->RegOpMode = ( SX1276LR->RegOpMode & RFLR_OPMODE_MASK ) | opMode;
sx1276-LoRa.c (User\SX1278\radio):        SX1276Write( REG_LR_OPMODE, SX1276LR->RegOpMode );        
sx1276-LoRa.c (User\SX1278\radio):    SX1276Read( REG_LR_OPMODE, &SX1276LR->RegOpMode );
sx1276-LoRa.c (User\SX1278\radio):    return SX1276LR->RegOpMode & ~RFLR_OPMODE_MASK;
sx1276-LoRa.c (User\SX1278\radio):    SX1276Read( REG_LR_LNA, &SX1276LR->RegLna );
sx1276-LoRa.c (User\SX1278\radio):    return( SX1276LR->RegLna >> 5 ) & 0x07;
sx1276-LoRa.c (User\SX1278\radio):    SX1276Read( REG_LR_RSSIVALUE, &SX1276LR->RegRssiValue );
sx1276-LoRa.c (User\SX1278\radio):        return RSSI_OFFSET_LF + ( double )SX1276LR->RegRssiValue;
sx1276-LoRa.c (User\SX1278\radio):        return RSSI_OFFSET_HF + ( double )SX1276LR->RegRssiValue;
sx1276-LoRa.c (User\SX1278\radio):        SX1276LR->RegIrqFlagsMask = RFLR_IRQFLAGS_RXTIMEOUT |
sx1276-LoRa.c (User\SX1278\radio):        SX1276Write( REG_LR_IRQFLAGSMASK, SX1276LR->RegIrqFlagsMask );
sx1276-LoRa.c (User\SX1278\radio):            SX1276LR->RegHopPeriod = LoRaSettings.HopPeriod;
sx1276-LoRa.c (User\SX1278\radio):            SX1276Read( REG_LR_HOPCHANNEL, &SX1276LR->RegHopChannel );
sx1276-LoRa.c (User\SX1278\radio):            SX1276LoRaSetRFFrequency( HoppingFrequencies[SX1276LR->RegHopChannel & RFLR_HOPCHANNEL_CHANNEL_MASK] );
sx1276-LoRa.c (User\SX1278\radio):            SX1276LR->RegHopPeriod = 0;//255; ??,是否填0
sx1276-LoRa.c (User\SX1278\radio):        SX1276Write( REG_LR_HOPPERIOD, SX1276LR->RegHopPeriod );
sx1276-LoRa.c (User\SX1278\radio):        SX1276LR->RegDioMapping1 = RFLR_DIOMAPPING1_DIO0_00 | RFLR_DIOMAPPING1_DIO1_00 | RFLR_DIOMAPPING1_DIO2_00 | RFLR_DIOMAPPING1_DIO3_00;
sx1276-LoRa.c (User\SX1278\radio):        SX1276LR->RegDioMapping2 = RFLR_DIOMAPPING2_DIO4_00 | RFLR_DIOMAPPING2_DIO5_00;
sx1276-LoRa.c (User\SX1278\radio):        SX1276WriteBuffer( REG_LR_DIOMAPPING1, &SX1276LR->RegDioMapping1, 2 );
sx1276-LoRa.c (User\SX1278\radio):            SX1276LR->RegFifoAddrPtr = SX1276LR->RegFifoRxBaseAddr;
sx1276-LoRa.c (User\SX1278\radio):            SX1276Write( REG_LR_FIFOADDRPTR, SX1276LR->RegFifoAddrPtr );
sx1276-LoRa.c (User\SX1278\radio):                SX1276Read( REG_LR_HOPCHANNEL, &SX1276LR->RegHopChannel );
sx1276-LoRa.c (User\SX1278\radio):                SX1276LoRaSetRFFrequency( HoppingFrequencies[SX1276LR->RegHopChannel & RFLR_HOPCHANNEL_CHANNEL_MASK] );
sx1276-LoRa.c (User\SX1278\radio):                SX1276Read( REG_LR_HOPCHANNEL, &SX1276LR->RegHopChannel );
sx1276-LoRa.c (User\SX1278\radio):                SX1276LoRaSetRFFrequency( HoppingFrequencies[SX1276LR->RegHopChannel & RFLR_HOPCHANNEL_CHANNEL_MASK] );
sx1276-LoRa.c (User\SX1278\radio):        SX1276Read( REG_LR_IRQFLAGS, &SX1276LR->RegIrqFlags );
sx1276-LoRa.c (User\SX1278\radio):        if( ( SX1276LR->RegIrqFlags & RFLR_IRQFLAGS_PAYLOADCRCERROR ) == RFLR_IRQFLAGS_PAYLOADCRCERROR )     //CRC校验
sx1276-LoRa.c (User\SX1278\radio):        SX1276Read( REG_LR_PKTRSSIVALUE, &SX1276LR->RegPktRssiValue );
sx1276-LoRa.c (User\SX1278\radio):                RxPacketRssiValue = RSSI_OFFSET_LF + ( ( double )SX1276LR->RegPktRssiValue ) + RxPacketSnrEstimate;
sx1276-LoRa.c (User\SX1278\radio):                RxPacketRssiValue = RSSI_OFFSET_LF + ( 1.0666 * ( ( double )SX1276LR->RegPktRssiValue ) );
sx1276-LoRa.c (User\SX1278\radio):                RxPacketRssiValue = RSSI_OFFSET_HF + ( ( double )SX1276LR->RegPktRssiValue ) + RxPacketSnrEstimate;
sx1276-LoRa.c (User\SX1278\radio):                RxPacketRssiValue = RSSI_OFFSET_HF + ( 1.0666 * ( ( double )SX1276LR->RegPktRssiValue ) );
sx1276-LoRa.c (User\SX1278\radio):            SX1276LR->RegFifoAddrPtr = SX1276LR->RegFifoRxBaseAddr;       
sx1276-LoRa.c (User\SX1278\radio):            SX1276Write( REG_LR_FIFOADDRPTR, SX1276LR->RegFifoAddrPtr );    //读取接收数据
sx1276-LoRa.c (User\SX1278\radio):                RxPacketSize = SX1276LR->RegPayloadLength;
sx1276-LoRa.c (User\SX1278\radio):                SX1276ReadFifo( RFBuffer, SX1276LR->RegPayloadLength );
sx1276-LoRa.c (User\SX1278\radio):                SX1276Read( REG_LR_NBRXBYTES, &SX1276LR->RegNbRxBytes );
sx1276-LoRa.c (User\SX1278\radio):                RxPacketSize = SX1276LR->RegNbRxBytes;
sx1276-LoRa.c (User\SX1278\radio):                SX1276ReadFifo( RFBuffer, SX1276LR->RegNbRxBytes );
sx1276-LoRa.c (User\SX1278\radio):            SX1276Read( REG_LR_FIFORXCURRENTADDR, &SX1276LR->RegFifoRxCurrentAddr );
sx1276-LoRa.c (User\SX1278\radio):                RxPacketSize = SX1276LR->RegPayloadLength;
sx1276-LoRa.c (User\SX1278\radio):                SX1276LR->RegFifoAddrPtr = SX1276LR->RegFifoRxCurrentAddr;
sx1276-LoRa.c (User\SX1278\radio):                SX1276Write( REG_LR_FIFOADDRPTR, SX1276LR->RegFifoAddrPtr );
sx1276-LoRa.c (User\SX1278\radio):                SX1276ReadFifo( RFBuffer, SX1276LR->RegPayloadLength );
sx1276-LoRa.c (User\SX1278\radio):                SX1276Read( REG_LR_NBRXBYTES, &SX1276LR->RegNbRxBytes );
sx1276-LoRa.c (User\SX1278\radio):                RxPacketSize = SX1276LR->RegNbRxBytes;
sx1276-LoRa.c (User\SX1278\radio):                SX1276LR->RegFifoAddrPtr = SX1276LR->RegFifoRxCurrentAddr;
sx1276-LoRa.c (User\SX1278\radio):                SX1276Write( REG_LR_FIFOADDRPTR, SX1276LR->RegFifoAddrPtr );
sx1276-LoRa.c (User\SX1278\radio):                SX1276ReadFifo( RFBuffer, SX1276LR->RegNbRxBytes );
sx1276-LoRa.c (User\SX1278\radio):            SX1276LR->RegIrqFlagsMask = RFLR_IRQFLAGS_RXTIMEOUT |
sx1276-LoRa.c (User\SX1278\radio):            SX1276LR->RegHopPeriod = LoRaSettings.HopPeriod;
sx1276-LoRa.c (User\SX1278\radio):            SX1276Read( REG_LR_HOPCHANNEL, &SX1276LR->RegHopChannel );
sx1276-LoRa.c (User\SX1278\radio):            SX1276LoRaSetRFFrequency( HoppingFrequencies[SX1276LR->RegHopChannel & RFLR_HOPCHANNEL_CHANNEL_MASK] );
sx1276-LoRa.c (User\SX1278\radio):            SX1276LR->RegIrqFlagsMask = RFLR_IRQFLAGS_RXTIMEOUT |
sx1276-LoRa.c (User\SX1278\radio):            SX1276LR->RegHopPeriod = 0;
sx1276-LoRa.c (User\SX1278\radio):        SX1276Write( REG_LR_HOPPERIOD, SX1276LR->RegHopPeriod );
sx1276-LoRa.c (User\SX1278\radio):        SX1276Write( REG_LR_IRQFLAGSMASK, SX1276LR->RegIrqFlagsMask );
sx1276-LoRa.c (User\SX1278\radio):        SX1276LR->RegPayloadLength = TxPacketSize;
sx1276-LoRa.c (User\SX1278\radio):        SX1276Write( REG_LR_PAYLOADLENGTH, SX1276LR->RegPayloadLength );
sx1276-LoRa.c (User\SX1278\radio):        SX1276LR->RegFifoTxBaseAddr = 0x00; // Full buffer used for Tx
sx1276-LoRa.c (User\SX1278\radio):        SX1276Write( REG_LR_FIFOTXBASEADDR, SX1276LR->RegFifoTxBaseAddr );
sx1276-LoRa.c (User\SX1278\radio):        SX1276LR->RegFifoAddrPtr = SX1276LR->RegFifoTxBaseAddr;
sx1276-LoRa.c (User\SX1278\radio):        SX1276Write( REG_LR_FIFOADDRPTR, SX1276LR->RegFifoAddrPtr );
sx1276-LoRa.c (User\SX1278\radio):        SX1276WriteFifo( RFBuffer, SX1276LR->RegPayloadLength );
sx1276-LoRa.c (User\SX1278\radio):        SX1276LR->RegDioMapping1 = RFLR_DIOMAPPING1_DIO0_01 | RFLR_DIOMAPPING1_DIO1_00 | RFLR_DIOMAPPING1_DIO2_00 | RFLR_DIOMAPPING1_DIO3_01;
sx1276-LoRa.c (User\SX1278\radio):        SX1276LR->RegDioMapping2 = RFLR_DIOMAPPING2_DIO4_01 | RFLR_DIOMAPPING2_DIO5_00;
sx1276-LoRa.c (User\SX1278\radio):        SX1276WriteBuffer( REG_LR_DIOMAPPING1, &SX1276LR->RegDioMapping1, 2 );
sx1276-LoRa.c (User\SX1278\radio):                SX1276Read( REG_LR_HOPCHANNEL, &SX1276LR->RegHopChannel );
sx1276-LoRa.c (User\SX1278\radio):                SX1276LoRaSetRFFrequency( HoppingFrequencies[SX1276LR->RegHopChannel & RFLR_HOPCHANNEL_CHANNEL_MASK] );
sx1276-LoRa.c (User\SX1278\radio):        SX1276LR->RegIrqFlagsMask = RFLR_IRQFLAGS_RXTIMEOUT |
sx1276-LoRa.c (User\SX1278\radio):        SX1276Write( REG_LR_IRQFLAGSMASK, SX1276LR->RegIrqFlagsMask );
sx1276-LoRa.c (User\SX1278\radio):        SX1276LR->RegDioMapping1 = RFLR_DIOMAPPING1_DIO0_00 | RFLR_DIOMAPPING1_DIO1_00 | RFLR_DIOMAPPING1_DIO2_00 | RFLR_DIOMAPPING1_DIO3_00;
sx1276-LoRa.c (User\SX1278\radio):        SX1276LR->RegDioMapping2 = RFLR_DIOMAPPING2_DIO4_00 | RFLR_DIOMAPPING2_DIO5_00;
sx1276-LoRa.c (User\SX1278\radio):        SX1276WriteBuffer( REG_LR_DIOMAPPING1, &SX1276LR->RegDioMapping1, 2 );
sx1276-LoRa.h (User\SX1278\radio):extern tSX1276LR* SX1276LR;
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276LR->RegFrfMsb = ( uint8_t )( ( freq >> 16 ) & 0xFF );
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276LR->RegFrfMid = ( uint8_t )( ( freq >> 8 ) & 0xFF );
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276LR->RegFrfLsb = ( uint8_t )( freq & 0xFF );
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276WriteBuffer( REG_LR_FRFMSB, &SX1276LR->RegFrfMsb, 3 );
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276ReadBuffer( REG_LR_FRFMSB, &SX1276LR->RegFrfMsb, 3 );
sx1276-LoRaMisc.c (User\SX1278\radio):    LoRaSettings.RFFrequency = ( ( uint32_t )SX1276LR->RegFrfMsb << 16 ) | ( ( uint32_t )SX1276LR->RegFrfMid << 8 ) | ( ( uint32_t )SX1276LR->RegFrfLsb );
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276Read( REG_LR_PACONFIG, &SX1276LR->RegPaConfig );
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276Read( REG_LR_PADAC, &SX1276LR->RegPaDac );
sx1276-LoRaMisc.c (User\SX1278\radio):    if( ( SX1276LR->RegPaConfig & RFLR_PACONFIG_PASELECT_PABOOST ) == RFLR_PACONFIG_PASELECT_PABOOST )
sx1276-LoRaMisc.c (User\SX1278\radio):        if( ( SX1276LR->RegPaDac & 0x87 ) == 0x87 )
sx1276-LoRaMisc.c (User\SX1278\radio):            SX1276LR->RegPaConfig = ( SX1276LR->RegPaConfig & RFLR_PACONFIG_MAX_POWER_MASK ) | 0x70;
sx1276-LoRaMisc.c (User\SX1278\radio):            SX1276LR->RegPaConfig = ( SX1276LR->RegPaConfig & RFLR_PACONFIG_OUTPUTPOWER_MASK ) | ( uint8_t )( ( uint16_t )( power - 5 ) & 0x0F );
sx1276-LoRaMisc.c (User\SX1278\radio):            SX1276LR->RegPaConfig = ( SX1276LR->RegPaConfig & RFLR_PACONFIG_MAX_POWER_MASK ) | 0x70;
sx1276-LoRaMisc.c (User\SX1278\radio):            SX1276LR->RegPaConfig = ( SX1276LR->RegPaConfig & RFLR_PACONFIG_OUTPUTPOWER_MASK ) | ( uint8_t )( ( uint16_t )( power - 2 ) & 0x0F );
sx1276-LoRaMisc.c (User\SX1278\radio):        SX1276LR->RegPaConfig = ( SX1276LR->RegPaConfig & RFLR_PACONFIG_MAX_POWER_MASK ) | 0x70;
sx1276-LoRaMisc.c (User\SX1278\radio):        SX1276LR->RegPaConfig = ( SX1276LR->RegPaConfig & RFLR_PACONFIG_OUTPUTPOWER_MASK ) | ( uint8_t )( ( uint16_t )( power + 1 ) & 0x0F );
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276Write( REG_LR_PACONFIG, SX1276LR->RegPaConfig );
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276Read( REG_LR_PACONFIG, &SX1276LR->RegPaConfig );
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276Read( REG_LR_PADAC, &SX1276LR->RegPaDac );
sx1276-LoRaMisc.c (User\SX1278\radio):    if( ( SX1276LR->RegPaConfig & RFLR_PACONFIG_PASELECT_PABOOST ) == RFLR_PACONFIG_PASELECT_PABOOST )
sx1276-LoRaMisc.c (User\SX1278\radio):        if( ( SX1276LR->RegPaDac & 0x07 ) == 0x07 )
sx1276-LoRaMisc.c (User\SX1278\radio):            LoRaSettings.Power = 5 + ( SX1276LR->RegPaConfig & ~RFLR_PACONFIG_OUTPUTPOWER_MASK );
sx1276-LoRaMisc.c (User\SX1278\radio):            LoRaSettings.Power = 2 + ( SX1276LR->RegPaConfig & ~RFLR_PACONFIG_OUTPUTPOWER_MASK );
sx1276-LoRaMisc.c (User\SX1278\radio):        LoRaSettings.Power = -1 + ( SX1276LR->RegPaConfig & ~RFLR_PACONFIG_OUTPUTPOWER_MASK );
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276Read( REG_LR_MODEMCONFIG1, &SX1276LR->RegModemConfig1 );
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276LR->RegModemConfig1 = ( SX1276LR->RegModemConfig1 & RFLR_MODEMCONFIG1_BW_MASK ) | ( bw << 4 );
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276Write( REG_LR_MODEMCONFIG1, SX1276LR->RegModemConfig1 );
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276Read( REG_LR_MODEMCONFIG1, &SX1276LR->RegModemConfig1 );
sx1276-LoRaMisc.c (User\SX1278\radio):    LoRaSettings.SignalBw = ( SX1276LR->RegModemConfig1 & ~RFLR_MODEMCONFIG1_BW_MASK ) >> 4;
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276Read( REG_LR_MODEMCONFIG2, &SX1276LR->RegModemConfig2 );    
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276LR->RegModemConfig2 = ( SX1276LR->RegModemConfig2 & RFLR_MODEMCONFIG2_SF_MASK ) | ( factor << 4 );
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276Write( REG_LR_MODEMCONFIG2, SX1276LR->RegModemConfig2 );    
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276Read( REG_LR_MODEMCONFIG2, &SX1276LR->RegModemConfig2 );   
sx1276-LoRaMisc.c (User\SX1278\radio):    LoRaSettings.SpreadingFactor = ( SX1276LR->RegModemConfig2 & ~RFLR_MODEMCONFIG2_SF_MASK ) >> 4;
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276Read( REG_LR_MODEMCONFIG1, &SX1276LR->RegModemConfig1 );
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276LR->RegModemConfig1 = ( SX1276LR->RegModemConfig1 & RFLR_MODEMCONFIG1_CODINGRATE_MASK ) | ( value << 1 );
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276Write( REG_LR_MODEMCONFIG1, SX1276LR->RegModemConfig1 );
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276Read( REG_LR_MODEMCONFIG1, &SX1276LR->RegModemConfig1 );
sx1276-LoRaMisc.c (User\SX1278\radio):    LoRaSettings.ErrorCoding = ( SX1276LR->RegModemConfig1 & ~RFLR_MODEMCONFIG1_CODINGRATE_MASK ) >> 1;
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276Read( REG_LR_MODEMCONFIG2, &SX1276LR->RegModemConfig2 );
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276LR->RegModemConfig2 = ( SX1276LR->RegModemConfig2 & RFLR_MODEMCONFIG2_RXPAYLOADCRC_MASK ) | ( enable << 2 );
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276Write( REG_LR_MODEMCONFIG2, SX1276LR->RegModemConfig2 );
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276ReadBuffer( REG_LR_PREAMBLEMSB, &SX1276LR->RegPreambleMsb, 2 );
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276LR->RegPreambleMsb = ( value >> 8 ) & 0x00FF;
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276LR->RegPreambleLsb = value & 0xFF;
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276WriteBuffer( REG_LR_PREAMBLEMSB, &SX1276LR->RegPreambleMsb, 2 );
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276ReadBuffer( REG_LR_PREAMBLEMSB, &SX1276LR->RegPreambleMsb, 2 );
sx1276-LoRaMisc.c (User\SX1278\radio):    return ( ( SX1276LR->RegPreambleMsb & 0x00FF ) << 8 ) | SX1276LR->RegPreambleLsb;
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276Read( REG_LR_MODEMCONFIG2, &SX1276LR->RegModemConfig2 );
sx1276-LoRaMisc.c (User\SX1278\radio):    LoRaSettings.CrcOn = ( SX1276LR->RegModemConfig2 & RFLR_MODEMCONFIG2_RXPAYLOADCRC_ON ) >> 1;
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276Read( REG_LR_MODEMCONFIG1, &SX1276LR->RegModemConfig1 );
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276LR->RegModemConfig1 = ( SX1276LR->RegModemConfig1 & RFLR_MODEMCONFIG1_IMPLICITHEADER_MASK ) | ( enable );
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276Write( REG_LR_MODEMCONFIG1, SX1276LR->RegModemConfig1 );
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276Read( REG_LR_MODEMCONFIG1, &SX1276LR->RegModemConfig1 );
sx1276-LoRaMisc.c (User\SX1278\radio):    LoRaSettings.ImplicitHeaderOn = ( SX1276LR->RegModemConfig1 & RFLR_MODEMCONFIG1_IMPLICITHEADER_ON );
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276LR->RegHopPeriod = value;
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276Write( REG_LR_HOPPERIOD, SX1276LR->RegHopPeriod );
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276Read( REG_LR_HOPPERIOD, &SX1276LR->RegHopPeriod );
sx1276-LoRaMisc.c (User\SX1278\radio):    LoRaSettings.HopPeriod = SX1276LR->RegHopPeriod;
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276LR->RegPayloadLength = value;
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276Write( REG_LR_PAYLOADLENGTH, SX1276LR->RegPayloadLength );
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276Read( REG_LR_PAYLOADLENGTH, &SX1276LR->RegPayloadLength );
sx1276-LoRaMisc.c (User\SX1278\radio):    LoRaSettings.PayloadLength = SX1276LR->RegPayloadLength;
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276Read( REG_LR_PADAC, &SX1276LR->RegPaDac );
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276Read( REG_LR_PACONFIG, &SX1276LR->RegPaConfig );
sx1276-LoRaMisc.c (User\SX1278\radio):    if( ( SX1276LR->RegPaConfig & RFLR_PACONFIG_PASELECT_PABOOST ) == RFLR_PACONFIG_PASELECT_PABOOST )
sx1276-LoRaMisc.c (User\SX1278\radio):            SX1276LR->RegPaDac = 0x87;
sx1276-LoRaMisc.c (User\SX1278\radio):        SX1276LR->RegPaDac = 0x84;
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276Write( REG_LR_PADAC, SX1276LR->RegPaDac );
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276Read( REG_LR_PADAC, &SX1276LR->RegPaDac );
sx1276-LoRaMisc.c (User\SX1278\radio):    return ( ( SX1276LR->RegPaDac & 0x07 ) == 0x07 ) ? true : false;
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276Read( REG_LR_PACONFIG, &SX1276LR->RegPaConfig );
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276LR->RegPaConfig = (SX1276LR->RegPaConfig & RFLR_PACONFIG_PASELECT_MASK ) | outputPin;
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276Write( REG_LR_PACONFIG, SX1276LR->RegPaConfig );
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276Read( REG_LR_PACONFIG, &SX1276LR->RegPaConfig );
sx1276-LoRaMisc.c (User\SX1278\radio):    return SX1276LR->RegPaConfig & ~RFLR_PACONFIG_PASELECT_MASK;
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276Read( REG_LR_PARAMP, &SX1276LR->RegPaRamp );
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276LR->RegPaRamp = ( SX1276LR->RegPaRamp & RFLR_PARAMP_MASK ) | ( value & ~RFLR_PARAMP_MASK );
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276Write( REG_LR_PARAMP, SX1276LR->RegPaRamp );
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276Read( REG_LR_PARAMP, &SX1276LR->RegPaRamp );
sx1276-LoRaMisc.c (User\SX1278\radio):    return SX1276LR->RegPaRamp & ~RFLR_PARAMP_MASK;
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276ReadBuffer( REG_LR_MODEMCONFIG2, &SX1276LR->RegModemConfig2, 2 );
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276LR->RegModemConfig2 = ( SX1276LR->RegModemConfig2 & RFLR_MODEMCONFIG2_SYMBTIMEOUTMSB_MASK ) | ( ( value >> 8 ) & ~RFLR_MODEMCONFIG2_SYMBTIMEOUTMSB_MASK );
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276LR->RegSymbTimeoutLsb = value & 0xFF;
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276WriteBuffer( REG_LR_MODEMCONFIG2, &SX1276LR->RegModemConfig2, 2 );
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276ReadBuffer( REG_LR_MODEMCONFIG2, &SX1276LR->RegModemConfig2, 2 );
sx1276-LoRaMisc.c (User\SX1278\radio):    return ( ( SX1276LR->RegModemConfig2 & ~RFLR_MODEMCONFIG2_SYMBTIMEOUTMSB_MASK ) << 8 ) | SX1276LR->RegSymbTimeoutLsb;
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276Read( REG_LR_MODEMCONFIG3, &SX1276LR->RegModemConfig3 );
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276LR->RegModemConfig3 = ( SX1276LR->RegModemConfig3 & RFLR_MODEMCONFIG3_LOWDATARATEOPTIMIZE_MASK ) | ( enable << 3 );
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276Write( REG_LR_MODEMCONFIG3, SX1276LR->RegModemConfig3 );
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276Read( REG_LR_MODEMCONFIG3, &SX1276LR->RegModemConfig3 );
sx1276-LoRaMisc.c (User\SX1278\radio):    return ( ( SX1276LR->RegModemConfig3 & RFLR_MODEMCONFIG3_LOWDATARATEOPTIMIZE_ON ) >> 3 );
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276Read( 0x31, &SX1276LR->RegDetectOptimize );
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276LR->RegDetectOptimize = ( SX1276LR->RegDetectOptimize & 0xF8 ) | value;
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276Write( 0x31, SX1276LR->RegDetectOptimize );
sx1276-LoRaMisc.c (User\SX1278\radio):    SX1276Read( 0x31, &SX1276LR->RegDetectOptimize );
sx1276-LoRaMisc.c (User\SX1278\radio):    return ( SX1276LR->RegDetectOptimize & 0x07 );
sx1276.c (User\SX1278\radio):    SX1276LR = ( tSX1276LR* )SX1276Regs;
sx1276.c (User\SX1278\radio):        SX1276LR->RegOpMode = ( SX1276LR->RegOpMode & RFLR_OPMODE_LONGRANGEMODE_MASK ) | RFLR_OPMODE_LONGRANGEMODE_ON;
sx1276.c (User\SX1278\radio):        SX1276Write( REG_LR_OPMODE, SX1276LR->RegOpMode );
sx1276.c (User\SX1278\radio):        SX1276LR->RegDioMapping1 = RFLR_DIOMAPPING1_DIO0_00 | RFLR_DIOMAPPING1_DIO1_00 | RFLR_DIOMAPPING1_DIO2_00 | RFLR_DIOMAPPING1_DIO3_00;
sx1276.c (User\SX1278\radio):        SX1276LR->RegDioMapping2 = RFLR_DIOMAPPING2_DIO4_00 | RFLR_DIOMAPPING2_DIO5_00;
sx1276.c (User\SX1278\radio):        SX1276WriteBuffer( REG_LR_DIOMAPPING1, &SX1276LR->RegDioMapping1, 2 );
sx1276.c (User\SX1278\radio):        SX1276LR->RegOpMode = ( SX1276LR->RegOpMode & RFLR_OPMODE_LONGRANGEMODE_MASK ) | RFLR_OPMODE_LONGRANGEMODE_OFF;
sx1276.c (User\SX1278\radio):        SX1276Write( REG_LR_OPMODE, SX1276LR->RegOpMode );
